tosca_definitions_version: tosca_simple_yaml_1_3
description: A TOSCA template to prepare for a later deployment of a specific app on a mec

metadata:
  # The following fields are "normative" and expected in TOSCA 
  template_name: generic_app
  template_author: paul.m.jordan@bt.com
  template_version: '1.0'
  # look for syntax error with the command below
  parse_command: puccini-tosca parse "tosca/mec_hosting_set_up.yml" -n tosca/mec_hosting_set_up_inputs.yml

node_types:
  hosted_app_type:
    derived_from: tosca.nodes.SoftwareComponent
    interfaces:
      Standard:
        operations:
          create:
            inputs:
              app_defn:
                type: json

topology_template:
  inputs:
    app_defn:
      type: json
      constraints:
        - schema: {
            "$schema": "http://json-schema.org/draft-04/schema#",
            "title": "app data",
            "description": "An app for possible deployment to a MEC",
            "type": "object",
            "properties": {
                "app_image_file": {
                  "description": "URL, where to get the deployment image",
                  "type": "string"
                },
                "app_state_data": {
                  "description": "URL, where to get any state data",
                  "type": "string"
                },
                "app_public_url": {
                  "description": "The url the public use to get to the app",
                  "type": "string"
                }
            },
            "required": ["app_image_file", "app_state_data", "app_public_url"]
          }

  node_templates:
    myApp:
      type: hosted_app_type #tosca.nodes.SoftwareComponent
      interfaces:
        Standard:
          operations:
            create:
              implementation: create_enablement_tosca.py # orchestrator will need to pass inputs as arguments
              inputs: 
                app_defn: { get_input: [ SELF, app_defn ] }