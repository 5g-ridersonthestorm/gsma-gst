tosca_definitions_version: tosca_simple_yaml_1_3
description: A TOSCA template to prepare for a later deployment of a specific app on a mec

metadata:
  # The following fields are "normative" and expected in TOSCA 
  template_name: generic_app
  template_author: paul.m.jordan@bt.com
  template_version: '1.0'
  # look for syntax error with the command below
  parse_command: puccini-tosca parse "tosca/mec_hosting_set_up.yml" -n tosca/mec_hosting_set_up_inputs.yml

node_types:
  hosted_app_type:
    derived_from: tosca.nodes.SoftwareComponent
    interfaces:
      Standard:
        operations:
          create:
            inputs:
              image_file:
                type: string
              state_data: 
                type: string
              public_url:
                type: string

topology_template:
  inputs: # This might be better as a structure 
    app_image_file: 
      type: string 
    app_state_data: 
      type: string 
    app_public_url: 
      type: string 

  node_templates:
    myApp:
      type: hosted_app_type #tosca.nodes.SoftwareComponent
      interfaces:
        Standard:
          operations:
            create:
              implementation: create_enablement_tosca.py # orchestrator will need to pass inputs as arguments
              inputs: 
                image_file: { get_input: [ SELF, app_image_file ] }
                state_data: { get_input: [ SELF, app_state_data ] }
                public_url: { get_input: [ SELF, app_public_url ] }